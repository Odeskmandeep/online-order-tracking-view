// Generated by view binder compiler. Do not edit!
package com.orderTrackerIndicator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.orderTrackerIndicator.R;
import com.orderTrackerIndicator.custom.trackerStatiesProgress.VerticalProgressBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IndicatorProgressBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout dateContainer;

  @NonNull
  public final TextView dateTxt;

  @NonNull
  public final FrameLayout indicatorContainer;

  @NonNull
  public final ImageView indicatorIcon;

  @NonNull
  public final VerticalProgressBar verticalProgress;

  private IndicatorProgressBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout dateContainer, @NonNull TextView dateTxt,
      @NonNull FrameLayout indicatorContainer, @NonNull ImageView indicatorIcon,
      @NonNull VerticalProgressBar verticalProgress) {
    this.rootView = rootView;
    this.dateContainer = dateContainer;
    this.dateTxt = dateTxt;
    this.indicatorContainer = indicatorContainer;
    this.indicatorIcon = indicatorIcon;
    this.verticalProgress = verticalProgress;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IndicatorProgressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IndicatorProgressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.indicator_progress, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IndicatorProgressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateContainer;
      FrameLayout dateContainer = ViewBindings.findChildViewById(rootView, id);
      if (dateContainer == null) {
        break missingId;
      }

      id = R.id.dateTxt;
      TextView dateTxt = ViewBindings.findChildViewById(rootView, id);
      if (dateTxt == null) {
        break missingId;
      }

      id = R.id.indicatorContainer;
      FrameLayout indicatorContainer = ViewBindings.findChildViewById(rootView, id);
      if (indicatorContainer == null) {
        break missingId;
      }

      id = R.id.indicatorIcon;
      ImageView indicatorIcon = ViewBindings.findChildViewById(rootView, id);
      if (indicatorIcon == null) {
        break missingId;
      }

      id = R.id.verticalProgress;
      VerticalProgressBar verticalProgress = ViewBindings.findChildViewById(rootView, id);
      if (verticalProgress == null) {
        break missingId;
      }

      return new IndicatorProgressBinding((ConstraintLayout) rootView, dateContainer, dateTxt,
          indicatorContainer, indicatorIcon, verticalProgress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
